import * as React from "react";
import { PropertyControls, ControlType, Frame, Animatable, animate } from "framer";

const defaultStyles: React.CSSProperties = {
  height: "100%",
  display: "flex",
  alignItems: "center",
  justifyContent: "left",
  textAlign: "center",
  color: "#ffffff",
  overflow: "hidden",
  borderRadius: "4px"
};
const fbIconSVG: string = `
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
    >
      <path
        fill="#ffffff"
        d="M22.6777778,0 L1.32222222,0 C0.588888889,0 0,0.588888889 0,1.32222222 L0,22.6777778 C0,23.4111111 0.588888889,24 1.32222222,24 L12.8222222,24 L12.8222222,14.7111111 L9.68888889,14.7111111 L9.68888889,11.0888889 L12.8111111,11.0888889 L12.8111111,8.42222222 C12.8111111,5.32222222 14.7,3.63333333 17.4666667,3.63333333 C18.7888889,3.63333333 19.9333333,3.73333333 20.2666667,3.77777778 L20.2666667,7.02222222 L18.3444444,7.02222222 C16.8444444,7.02222222 16.5444444,7.73333333 16.5444444,8.78888889 L16.5444444,11.1 L20.1333333,11.1 L19.6666667,14.7222222 L16.5555556,14.7222222 L16.5555556,24 L22.6666667,24 C23.4,24 23.9888889,23.4111111 23.9888889,22.6777778 L23.9888889,1.32222222 C24,0.588888889 23.4111111,0 22.6777778,0 Z"
      />
    </svg>`;
const fbBlue: number = "#385898";
const fbBluePressed: number = "#314d86";
const buttonTextColor: number = "#ffffff";

interface Props {
  text: string;
  interface: "ios" | "android";
  buttonType: "login" | "with";
}

export class FBLoginButton extends React.Component<Props> {
  static defaultProps = {
    height: 44,
    width: 310,
    interface: "ios",
    buttonType: "login",
    text: "Log in with Facebook",
    scale: Animatable(1),
    backgroundColor: Animatable(fbBlue)
  };

  static propertyControls: PropertyControls = {
    interface: {
      type: ControlType.Enum,
      options: ["ios", "android"],
      optionTitles: ["iOS", "Android"],
      title: "Interface"
    }
    buttonType: {
      type: ControlType.Enum
      options: ["login", "with"]
      optionTitles: ["Log in", "Continue with"]
      title: "Button Type"
    }
  };

  fontFamily() {
    let familyStr;
    switch (this.props.interface) {
      case "ios":
        familyStr = "-apple-system, system-ui, BlinkMacSystemFont";
        break;
      case "android":
        familyStr = "Roboto";
        break;
      case "www":
        familyStr = "'Helvetica Neue',Arial,sans-serif";
        break;
    }
    return familyStr;
  }

  buttonText() {
    let buttonStr;
    switch (this.props.buttonType) {
      case "login":
        buttonStr = "Log in with Facebook";
        break;
      case "with":
        buttonStr = "Continue with Facebook";
        break;
    }
    return buttonStr;
  }

  onTouchStart = () => {
    animate.bezier(this.props.backgroundColor, fbBluePressed, {curve: [.5, 0, 1, 1], duration: .1})
    animate.bezier(this.props.scale, .99, { curve: [.5, -1, 1, 1], duration: .1 })
  }

  onTouchEnd= () => {
    animate.bezier(this.props.backgroundColor, fbBlue, { curve: [.5, 0, 1, 1], duration: .1 })
    animate.bezier(this.props.scale, 1, { curve: [.5, -1, 1, 1], duration: .1 })
  }

  render() {
    return (
      <Frame style={{...defaultStyles}}
        width={this.props.width} 
        height={this.props.height}
        scale={this.props.scale}
        background={this.props.backgroundColor}
        onTapStart={this.onTouchStart}
        onTapEnd={this.onTouchEnd}
      >
        <div
          style={{ 
            width: "24px"
            height: "24px"
            position: "absolute"
            marginLeft: "12px"
            top: "50%"
            marginTop: "-12px"
          }}
          dangerouslySetInnerHTML={{ __html: fbIconSVG }}
        />
        <div style={{ marginLeft: "34px", width: "100%", fontFamily: this.fontFamily() }}>
          {this.buttonText()}
        </div>
      </Frame>
    );
  }
}
